name: update_data
on:
  workflow_dispatch:
    inputs:
      timeoutStr:
        description: 'Timeout duration'
        required: false
        default: '30'
  schedule:
    - cron: '00 16 * * *'
    - cron: '30 22 * * *'
env:
  API_URL: ${{secrets.ENAPI_URL}}
  RELEASE: ${{secrets.RELEASE}}
  UPLOAD: ${{secrets.UPLOAD}}
jobs:
  update_data:
    runs-on: ubuntu-latest
    steps:
      - name: Setup timezone ðŸš€
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Asia/Shanghai
      - uses: actions/checkout@v2
        with:
          ref: main
          persist-credentials: false
          fetch-depth: 0
      - name: Set environment variable ðŸš€
        env:
          timeoutStr: ${{ inputs.timeoutStr }}
        run: |
          echo "timeoutStr=${timeoutStr}" >> .env
          echo "timeoutStr: $timeoutStr"
      - name: Setup Go ðŸš€
        uses: actions/setup-go@v2
        with:
          go-version: '^1.9'
          timeoutStr: ${{ inputs.timeoutStr }}
      - name: Install jq ðŸš€
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      - name: Install curl ðŸš€
        run: sudo apt-get install -y curl
      - name: Check file count ðŸš€
        id: check_files
        run: sh ./check_data.sh ${{secrets.ENAPI_URL}}
      - name: Download dependencies and run main.go ðŸš€
        if: steps.check_files.outcome == 'success'
        run: |
          go mod download
          go run main.go
      - name: Commit files ðŸš€
        run: |
          git add .
          git config --local user.email "h7ml@qq.com"
          git config --local user.name "h7ml"
          git commit --allow-empty -m ":rocket: Update today's 7fenglou on $(date)"
      - name: Upload  ðŸš€
        uses: actions/upload-artifact@v2
        with:
          name: 7fenglou
          path: data
        if: steps.check_files.outcome == 'success'
      - name: release ðŸš€
        uses: elgohr/Github-Release-Action@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          UPLOAD: ${{secrets.UPLOAD}}
        with:
          title: ${{ github.sha }}
        if: steps.check_files.outcome == 'success' && env.RELEASE == 'true'
      - name: Push changes ðŸš€
        uses: ad-m/github-push-action@master
        env:
          UPLOAD: ${{secrets.UPLOAD}}
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}
        if: steps.check_files.outcome == 'success' && env.UPLOAD== 'true'
